env:
    global:
        - REPO_DIR=gensim
        - BUILD_COMMIT=e87343421d8d58fd45b01077129174b1d8c09b8c
        - UNICODE_WIDTH=32
        - GLOBAL_DEPENDS="six smart_open"
        - TEST_COMMON="pytest pytest-rerunfailures mock cython pyemd testfixtures scikit-learn Morfessor==2.0.2a4 python-Levenshtein>=0.10.2"
        - BUILD_DEPENDS="numpy==1.11.3 scipy==0.18.1 ${GLOBAL_DEPENDS}"
        - TEST_DEPENDS="${BUILD_DEPENDS} ${TEST_COMMON}"
        - MACOSX_DEPLOYMENT_TARGET=10.7
        - WHEELHOUSE_UPLOADER_USERNAME="Lev.Konstantinovskiy"
        # generated by 'gem install travis; travis encrypt -r MacPython/gensim-wheels WHEELHOUSE_UPLOADER_SECRET=<the api key>'
        - secure: "L99GHXSsHwj2P+lfJPTeLCIDMpRomj8yhhH2TuFJ9wP36rkVtewpy6ExVey/jae1dwMaRyoMbdXZwbMTNs0cUuvDvniBwQM8PRNxy3VdOxLNVGFbCtj6+/iOl6rxok6TPkhwlrhzQy2hq9vyZjeNsFZCkGiTFm7Idgd1dWUPDeBowR3X6ucIFK7fR5qDgNfFVVBUPKMmGOyvLy1nUB9FV7mdAK8VQCrIKk5BMVcovAsnYBgUF2eAMemgeFUtHMF9KbpXPRgjPyMZfdKhjIvqz5qbOGDhbrTn5sD1oPWx0IkA5gVazlng8EeyasiRg87br2TxknHLHHP8TEiVnj0wTJ7yYQK6zAwz6RM1ZFOQ1JI0YY4kgw1TRZpTqelehlvQYtHiwDxJXQfb/Nt2dxC0cJPjs5NMMrQKWyP5yHRP/RX4CKSRMF/48pF2kROg1gkc+i68mKKrPpckq0QXEzxTJwjuLLFq4Nos4JAQhs+3rxm4yFExpgdkfbtutRv3/I/HNW9il/aQltGgih65KCYkkJx6uFfENQnXnvLMoR16vJ94RghCKh4cnC6w4h4HRjVZgm34FZ00fe9Z30H/5FKb1/VoGm0edz56o5zOvdKEpzxoGS3wI5IrVGCh348heUFRzjxLNmWtkpOJgm3b9FZgb6h72cflq5NwbgeQtF4ld+U="


language: python
# The travis Python version is unrelated to the version we build and test
# with.  This is set with the MB_PYTHON_VERSION variable.
python: 3.5
sudo: required
dist: trusty
services: docker

matrix:
  exclude:
    # Exclude the default Python 3.5 build
    - python: 3.5
  include:

    # Linux 
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=x86_64

    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686

    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=x86_64
        - UNICODE_WIDTH=16

    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
        - UNICODE_WIDTH=16

    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
        - PLAT=x86_64

    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
        - PLAT=i686

    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
        - PLAT=x86_64

    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
        - PLAT=i686

    - os: linux
      env:
        - BUILD_DEPENDS="numpy==1.14.5 scipy==1.1.0 ${GLOBAL_DEPENDS}"
        - TEST_DEPENDS="${BUILD_DEPENDS} ${TEST_COMMON}"
        - MB_PYTHON_VERSION=3.7
        - PLAT=x86_64

    - os: linux
      env:
        - BUILD_DEPENDS="numpy==1.14.5 scipy==1.1.0 ${GLOBAL_DEPENDS}"
        - TEST_DEPENDS="${BUILD_DEPENDS} ${TEST_COMMON}"
        - MB_PYTHON_VERSION=3.7
        - PLAT=i686

    # MacOS
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=2.7
        - SKIP_NETWORK_TESTS=1

    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.5
        - SKIP_NETWORK_TESTS=1

    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.6

    - os: osx
      language: generic
      env:
        - BUILD_DEPENDS="numpy==1.14.5 scipy==1.1.0 ${GLOBAL_DEPENDS}"
        - TEST_DEPENDS="${BUILD_DEPENDS} ${TEST_COMMON}"
        - MB_PYTHON_VERSION=3.7


before_install:
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    - clean_code $REPO_DIR $BUILD_COMMIT
    - build_wheel $REPO_DIR $PLAT

script:
    - install_run $PLAT

after_success:
    - pip install wheelhouse-uploader
    - echo ${TRAVIS_BUILD_DIR}/wheelhouse/
    - ls -laht ${TRAVIS_BUILD_DIR}/wheelhouse/
    # This uploads the wheels to a Rackspace container owned by the
    # scikit-learn team, available at http://wheels.scipy.org.  See above
    # for information on using this account or choosing another.
    - python -m wheelhouse_uploader upload --local-folder ${TRAVIS_BUILD_DIR}/wheelhouse/ --no-ssl-check gensim-wheels

notifications:
  email:
    - ivan+gensimwheels@rare-technologies.com
  on_success: always
  on_failure: always
